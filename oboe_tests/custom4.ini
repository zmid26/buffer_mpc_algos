# ======================================================================================================================
# ======================================================================================================================
# VIDEO PARAMETERS
# Parameters for the specific video file being streamed

[video]
chunk_length=        1        # Seconds per chunk
base_chunk_size=     1        # Mb for quality level 1. Quality level 2 is doubled, 3 is quadrupled..
client_buffer_size=  5       # max seconds of video stored by client program

# ======================================================================================================================
# ======================================================================================================================
# QUALITY PARAMETERS
#
# User Quality of Experience formula:
# [ + (Total chunk quality) * (Quality Coefficient)
#   - (Total chunk variation) * (Variation Coefficient)
#   - (Total rebuffer time) * (Rebuffering Coefficient)
#   / Video Length = User Quality of Experience
#
# Shorthand: [(tot_qual * qual_coef) - (tot_var * var_coef) - (rebuf_time * rebuf_coef)] / video_length = QoE
#
# Example: Video is made of three chunks, streamed with quality 3, quality 1, and quality 3 respectively. Each chunk is
#          3 seconds long. All coefficients are 1, and the video buffers for 2 seconds total.
#
#          Total quality: 3 + 1 + 3 = 7
#          Total variation: |3 - 1| + |1 - 3| = 4
#          Rebuffer time: 2
#          Video length: 3 * 3 = 9
#          QoE = [(tot_qual * qual_coef) - (tot_var * var_coef) - (rebuf_time * rebuf_coef)] / video_length
#          QoE = [(   7     *     1    ) - (   4    *    1    ) - (     2     *      1    )] /      9
#              = .11

[quality]
quality_levels=                 3         # User can choose between 3 quality levels
quality_coefficient=            2         # See above
variation_coefficient=          1         # See above
rebuffering_coefficient=        8         # See above


# ======================================================================================================================
# ======================================================================================================================
# THROUGHPUT PARAMETERS
#
# Formatted as a list: CHANGE TO Mb
#         Start Time (Seconds) = New Throughput (Mbps)
#         e.g. 0=     1
#              10=    5
#              25=    2
#              implies that from simulated time 0 to 10 seconds, the throughput is 1Mbps. At 10 seconds, it changes to
#              5Mbps. Then, at 25 seconds, it changes to 2Mbps and stays there for the rest of the test.

[throughput]
# custom throughput from oboe
0 = 4.238791720659685
1 = 4.529295450954763
2 = 4.529295450954763
3 = 4.310001883172253
4 = 4.310001883172253
5 = 3.1127450358509368
6 = 3.1127450358509368
7 = 2.391804756136545
8 = 2.391804756136545
9 = 2.8308682562063847
10 = 2.8308682562063847
11 = 2.7672348759520835
12 = 2.7672348759520835
13 = 2.070551547347399
14 = 2.070551547347399
15 = 2.3293497807658
16 = 2.3293497807658
17 = 4.3524824224280945
18 = 4.3524824224280945
19 = 4.160391525362776
20 = 4.160391525362776
21 = 4.1316618413379755
22 = 4.1316618413379755
23 = 4.070662061227913
24 = 4.070662061227913
25 = 4.2995433843607564
26 = 4.2995433843607564
27 = 4.275804986353976
28 = 4.275804986353976
29 = 3.7333941145215133
30 = 3.7333941145215133
31 = 4.882053830782012
32 = 4.882053830782012
33 = 4.878353515287698
34 = 4.878353515287698
35 = 4.907236668088161
36 = 4.907236668088161
37 = 4.906325044495543
38 = 4.906325044495543
39 = 4.883236476644307
40 = 4.883236476644307
41 = 4.905502804797228
42 = 4.905502804797228
43 = 4.818711756201678
44 = 4.818711756201678
45 = 4.502394186806009
46 = 4.502394186806009
47 = 4.643345698335038
48 = 4.643345698335038
49 = 4.6686399392786235
50 = 4.6686399392786235
51 = 4.811125102077124
52 = 4.811125102077124
53 = 4.800539524312228
54 = 4.800539524312228
55 = 4.753081349208977
56 = 4.753081349208977
57 = 4.581799141496399
58 = 4.581799141496399
59 = 4.827984805252845
60 = 4.827984805252845
61 = 4.8096727836597255
62 = 4.8096727836597255
63 = 4.96561153706315
64 = 4.96561153706315
65 = 4.949333991219644
66 = 4.949333991219644
67 = 4.93778369395365
68 = 4.93778369395365
69 = 4.7877298951361045
70 = 4.7877298951361045
71 = 4.78926471143364
72 = 4.78926471143364
73 = 4.81778210586954
74 = 4.81778210586954
75 = 4.802045909913251
76 = 4.802045909913251
77 = 4.7987970191763125
78 = 4.7987970191763125
79 = 4.793711717345282
80 = 4.793711717345282
81 = 4.72565296714372
82 = 4.72565296714372
83 = 4.534804872333106
84 = 4.534804872333106
85 = 4.586187372214912
86 = 4.586187372214912
87 = 4.554078376494714
88 = 4.554078376494714
89 = 4.650966102445878
90 = 4.650966102445878
91 = 4.829619430675741
92 = 4.829619430675741
93 = 4.71065279131504
94 = 4.71065279131504
95 = 4.680049028672108
96 = 4.680049028672108
97 = 4.766927237269938
98 = 4.766927237269938
99 = 4.937440751066799
100 = 4.937440751066799
101 = 4.962934633557549
102 = 4.962934633557549
103 = 4.997873406953959
104 = 4.997873406953959
105 = 5.0
106 = 5.0
107 = 4.845314481115764
108 = 4.845314481115764
109 = 4.778644591060652
110 = 4.778644591060652
111 = 4.534811116483065
112 = 4.534811116483065
113 = 4.619694397872142
114 = 4.619694397872142
115 = 4.734117205993103
116 = 4.734117205993103
117 = 4.857677931860626
118 = 4.857677931860626
119 = 4.8669859732537395
120 = 4.8669859732537395
121 = 4.896010781975579
122 = 4.896010781975579
123 = 4.831611124196423
124 = 4.831611124196423
125 = 4.761049228709258
126 = 4.761049228709258
127 = 4.789228861786628
128 = 4.789228861786628
129 = 0.755048394011224
130 = 0.755048394011224
131 = 0.7621237789660189
132 = 0.7621237789660189
133 = 0.7609848085716113
134 = 0.7609848085716113
135 = 0.7606763968145597
136 = 0.7606763968145597
137 = 0.7490908359544142
138 = 0.7490908359544142
139 = 0.9098694140798222
140 = 0.9098694140798222
141 = 1.2492239444850313
142 = 1.2492239444850313
143 = 1.4015445729125178
144 = 1.4015445729125178
145 = 1.7422189396754497
146 = 1.7422189396754497
147 = 2.617455929968264
148 = 2.617455929968264
149 = 2.2319502814477032
150 = 2.2319502814477032
151 = 2.59588493659056
152 = 2.59588493659056
153 = 3.3683231970085457
154 = 3.3683231970085457
155 = 3.4560944901870276
156 = 3.4560944901870276
157 = 3.9079317375450473
158 = 3.9079317375450473
159 = 4.421739301336824
160 = 4.421739301336824
161 = 3.3793208969745256
162 = 3.3793208969745256
163 = 3.277822348716116
164 = 3.277822348716116
165 = 5.0
166 = 5.0
167 = 4.494904727534868
168 = 4.494904727534868
169 = 3.672462152798893
170 = 3.672462152798893
171 = 3.446948886488159
172 = 3.446948886488159
173 = 3.337903703456051
174 = 3.337903703456051
175 = 3.261303663238673
176 = 3.261303663238673
177 = 2.428407006071203
178 = 2.428407006071203
179 = 2.962152490717172
180 = 2.962152490717172
181 = 3.6057709937980444
182 = 3.6057709937980444
183 = 2.3129293799354125
184 = 2.3129293799354125
185 = 3.1640273270993364
186 = 3.1640273270993364
187 = 2.7114687373174013
188 = 2.7114687373174013
189 = 1.7718336805504697
190 = 1.7718336805504697
191 = 3.2643192854441887
192 = 3.2643192854441887
193 = 3.4062834149089727
194 = 3.4062834149089727
195 = 3.365370401680324
196 = 3.365370401680324
197 = 3.1040625959194963
198 = 3.1040625959194963
199 = 2.9832646215490524
200 = 2.9832646215490524
201 = 2.6393013245642383
202 = 2.6393013245642383
203 = 2.155080493955335
204 = 2.155080493955335
205 = 3.4246973803267586
206 = 3.4246973803267586
207 = 4.5000673221572765
208 = 4.5000673221572765
209 = 2.683460853208009
210 = 2.683460853208009
211 = 1.4587060771901217
212 = 1.4587060771901217
213 = 1.4883570683882552
214 = 1.4883570683882552
215 = 2.308717839007006
216 = 2.308717839007006
217 = 3.0832534545509493
218 = 3.0832534545509493
219 = 3.5699257516185465
220 = 3.5699257516185465
221 = 3.9764141179746892
222 = 3.9764141179746892
223 = 4.056946179453868
224 = 4.056946179453868
225 = 3.094195696648746
226 = 3.094195696648746
227 = 3.451948445622555
228 = 3.451948445622555
229 = 3.4829899031181326
230 = 3.4829899031181326
231 = 3.31569068151484
232 = 3.31569068151484
233 = 2.602853335499951
234 = 2.602853335499951
235 = 2.56879342435369
236 = 2.56879342435369
237 = 2.0810091067517487
238 = 2.0810091067517487
239 = 5.0
240 = 5.0
241 = 2.1961613801410116
242 = 2.1961613801410116
243 = 3.688376444347222
244 = 3.688376444347222
245 = 4.091866148066364
246 = 4.091866148066364
247 = 3.8863419865913222
248 = 3.8863419865913222
249 = 3.6810292878193973
250 = 3.6810292878193973
251 = 3.798181422409268
252 = 3.798181422409268
253 = 4.033019097077553
254 = 4.033019097077553
255 = 4.2193631620774354
256 = 4.2193631620774354
257 = 4.320214744347571
258 = 4.320214744347571
259 = 3.9244299236762092
260 = 3.9244299236762092
261 = 3.5327885534062036
262 = 3.5327885534062036
263 = 2.8504717695840998
264 = 2.8504717695840998
265 = 2.789425639114606
266 = 2.789425639114606
267 = 3.7625459379469146
268 = 3.7625459379469146
269 = 4.375631197554386
270 = 4.375631197554386
271 = 4.393702405502661
272 = 4.393702405502661
273 = 4.16835706939688
274 = 4.16835706939688
275 = 4.106676363031829
276 = 4.106676363031829
277 = 4.188466052251866
278 = 4.188466052251866
279 = 4.227234312910938
280 = 4.227234312910938
281 = 4.320826239933753
282 = 4.320826239933753
283 = 3.3559636449840564
284 = 3.3559636449840564
285 = 3.0639116898799106
286 = 3.0639116898799106
287 = 4.118265816325949
288 = 4.118265816325949
289 = 4.397125655857929
290 = 4.397125655857929
291 = 3.9575511165886246
292 = 3.9575511165886246
293 = 3.8107821541458535
294 = 3.8107821541458535
295 = 3.8040236488765795
296 = 3.8040236488765795
297 = 3.864575261922532
298 = 3.864575261922532
299 = 4.2197542975623845
300 = 4.2197542975623845
301 = 4.522766758797944
302 = 4.522766758797944
303 = 4.148815708895512
304 = 4.148815708895512
305 = 3.563530848570165
306 = 3.563530848570165
307 = 4.002913713855883
308 = 4.002913713855883
309 = 4.5482864925568744
310 = 4.5482864925568744
311 = 4.6599426887487025
312 = 4.6599426887487025
313 = 4.365127632188873
314 = 4.365127632188873
315 = 3.90913306343436
316 = 3.90913306343436
317 = 3.2282647013058003
318 = 3.2282647013058003
319 = 4.323970674448127
320 = 4.323970674448127
321 = 3.460072290503886
322 = 3.460072290503886
323 = 3.43476940654116
324 = 3.43476940654116
325 = 3.4448300299173122
326 = 3.4448300299173122
327 = 3.482963978500701
328 = 3.482963978500701
329 = 3.4742750156730455
330 = 3.4742750156730455
331 = 3.4796507077151375
332 = 3.4796507077151375
333 = 3.2539638665105612
334 = 3.2539638665105612
335 = 2.3560228279174438
336 = 2.3560228279174438
337 = 2.163509899142106
338 = 2.163509899142106
339 = 2.4788374513290963
340 = 2.4788374513290963
341 = 2.8171926074876796
342 = 2.8171926074876796
343 = 2.8255439805964135
344 = 2.8255439805964135
345 = 2.699575003581589
346 = 2.699575003581589
347 = 3.605294426897787
348 = 3.605294426897787
# Throughput End

# ======================================================================================================================
# ======================================================================================================================
# CHUNK PARAMETERS
#
# A list of chunk size ratios. The size for streaming a particular chunk at a particular quality level is given by:
#         Total size = base chunk size * chunk size ratio * 2 ^ (quality level - 1)
#
#
# Example:   You'd like to stream the first three chunks in a video at quality levels 1, 2, 3. The base_chunk_size is
#            1Mb and the first three values in the chunk_size_ratios list are 1, 1, 1.
#
#            Size of first chunk:  1 * 1 * 2 ^ (1 - 1) = 1
#            Size of second chunk: 1 * 1 * 2 ^ (2 - 1) = 2
#            Size of third chunk:  1 * 1 * 2 ^ (3 - 1) = 4
#
# Example 2: Usually, streaming at a higher quality takes more bits. However, we may get counterintuitive results when
#            chunk size ratio varies as well. Let's say we're still streaming at quality levels 1, 2, 3. This time,
#            however, we set chunk_size_ratios to 1, 2, .5.
#
#            Size of first chunk:  1 * 1  * 2 ^ (1 - 1) = 1
#            Size of second chunk: 1 * 2  * 2 ^ (2 - 1) = 4
#            Size of third chunk:  1 * .5 * 2 ^ (3 - 1) = 2
#
#            Because variable-bitrate encoding allowed the third chunk to be encoded more cheaply, we could stream at
#            a higher quality and use fewer bits than the second chunk.
#
[chunk_size_ratios]
# Total size = chunk size * chunk size ratio * 2 ^ (quality level - 1)
chunk_size_ratios=
# 240 chunks.    1.000,
    1.000,
    1.000,
    1.200,
    1.400,
    1.400,
    1.000,
    0.600,
    1.200,
    1.400,
    1.600,
    1.800,
    1.800,
    1.800,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.200,
    1.200,
    1.200,
    1.400,
    1.400,
    1.400,
    1.400,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.600,
    1.600,
    1.200,
    1.200,
    0.200,
    0.200,
    0.200,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.200,
    0.200,
    0.200,
    0.200,
    0.200,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.200,
    0.200,
    0.200,
    0.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    1.000,
    1.000,
    1.000,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.400,
    1.200,
    1.200,
    1.200,
    1.000,
    1.000,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    0.600,
    0.400,
    0.400,
    1.600,
    1.600,
    1.600,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    1.200,
    1.200,
    1.200,
    1.200,
    1.400,
    1.000,
    1.000,
    1.000,
    0.600,
    0.600,
    0.600,
    0.400,
    0.600,
    0.600,
    0.600,
    0.600,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.400,
    0.400,
    0.400,
    1.400,
    1.400,
    1.400,
    1.200,
    1.000,
    1.000,
    1.200,
    1.200,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    0.600,
    0.800,
    0.400,
    0.600,
    0.600,
    0.600,
    0.600,
    1.000,
    1.400,
    1.400,
    0.200,
    0.200,
    0.600,
    0.600,
    0.600,
    1.000,
    1.000,
    1.000,
    1.000,
    1.600,
    1.600,
    1.600,
    1.400,
    1.600,
    1.600,
    1.800,
    1.800,
    1.800,
    1.600,
    1.800,
    1.800,
    1.600,
    1.600,
    1.400,
    1.400,
    1.400,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.600,
    1.600,
    1.600,
    1.600,
    1.000,
    1.000,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.000,
    0.600,
# Chunk Size Ratios End
