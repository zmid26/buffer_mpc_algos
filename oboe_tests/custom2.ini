# ======================================================================================================================
# ======================================================================================================================
# VIDEO PARAMETERS
# Parameters for the specific video file being streamed

[video]
chunk_length=        1        # Seconds per chunk
base_chunk_size=     1        # Mb for quality level 1. Quality level 2 is doubled, 3 is quadrupled..
client_buffer_size=  5       # max seconds of video stored by client program

# ======================================================================================================================
# ======================================================================================================================
# QUALITY PARAMETERS
#
# User Quality of Experience formula:
# [ + (Total chunk quality) * (Quality Coefficient)
#   - (Total chunk variation) * (Variation Coefficient)
#   - (Total rebuffer time) * (Rebuffering Coefficient)
#   / Video Length = User Quality of Experience
#
# Shorthand: [(tot_qual * qual_coef) - (tot_var * var_coef) - (rebuf_time * rebuf_coef)] / video_length = QoE
#
# Example: Video is made of three chunks, streamed with quality 3, quality 1, and quality 3 respectively. Each chunk is
#          3 seconds long. All coefficients are 1, and the video buffers for 2 seconds total.
#
#          Total quality: 3 + 1 + 3 = 7
#          Total variation: |3 - 1| + |1 - 3| = 4
#          Rebuffer time: 2
#          Video length: 3 * 3 = 9
#          QoE = [(tot_qual * qual_coef) - (tot_var * var_coef) - (rebuf_time * rebuf_coef)] / video_length
#          QoE = [(   7     *     1    ) - (   4    *    1    ) - (     2     *      1    )] /      9
#              = .11

[quality]
quality_levels=                 3         # User can choose between 3 quality levels
quality_coefficient=            2         # See above
variation_coefficient=          1         # See above
rebuffering_coefficient=        8         # See above


# ======================================================================================================================
# ======================================================================================================================
# THROUGHPUT PARAMETERS
#
# Formatted as a list: CHANGE TO Mb
#         Start Time (Seconds) = New Throughput (Mbps)
#         e.g. 0=     1
#              10=    5
#              25=    2
#              implies that from simulated time 0 to 10 seconds, the throughput is 1Mbps. At 10 seconds, it changes to
#              5Mbps. Then, at 25 seconds, it changes to 2Mbps and stays there for the rest of the test.

[throughput]
# custom throughput from oboe
0 = 3.799957228975545
1 = 3.557423995191267
2 = 3.557423995191267
3 = 4.2508408264272495
4 = 4.2508408264272495
5 = 3.792676153881148
6 = 3.792676153881148
7 = 3.189257747126555
8 = 3.189257747126555
9 = 2.4538697988310636
10 = 2.4538697988310636
11 = 0.8593277536957957
12 = 0.8593277536957957
13 = 0.8613210404243031
14 = 0.8613210404243031
15 = 1.0467948450093862
16 = 1.0467948450093862
17 = 1.404149023274369
18 = 1.404149023274369
19 = 1.3872609788869352
20 = 1.3872609788869352
21 = 1.4081306194536338
22 = 1.4081306194536338
23 = 4.503915127278608
24 = 4.503915127278608
25 = 4.509650007365139
26 = 4.509650007365139
27 = 4.470309764916064
28 = 4.470309764916064
29 = 2.1516352683612654
30 = 2.1516352683612654
31 = 1.7584959173078438
32 = 1.7584959173078438
33 = 1.0107809063985609
34 = 1.0107809063985609
35 = 1.0146261302290112
36 = 1.0146261302290112
37 = 1.1081582884401648
38 = 1.1081582884401648
39 = 1.2689743424529263
40 = 1.2689743424529263
41 = 1.2781478107143482
42 = 1.2781478107143482
43 = 4.960478627719901
44 = 4.960478627719901
45 = 5.0
46 = 5.0
47 = 4.9932425387374755
48 = 4.9932425387374755
49 = 4.995243604576424
50 = 4.995243604576424
51 = 4.9235157708169
52 = 4.9235157708169
53 = 4.901080432804416
54 = 4.901080432804416
55 = 4.8896229759289085
56 = 4.8896229759289085
57 = 4.885149071993517
58 = 4.885149071993517
59 = 4.716414723515642
60 = 4.716414723515642
61 = 4.661153318074598
62 = 4.661153318074598
63 = 4.494100631082683
64 = 4.494100631082683
65 = 4.2594824058798295
66 = 4.2594824058798295
67 = 4.200139334416884
68 = 4.200139334416884
69 = 4.885880736230825
70 = 4.885880736230825
71 = 4.45652270046122
72 = 4.45652270046122
73 = 4.076658210944435
74 = 4.076658210944435
75 = 4.593846021428466
76 = 4.593846021428466
77 = 4.775190901600983
78 = 4.775190901600983
79 = 4.926662209394076
80 = 4.926662209394076
81 = 4.83231634067603
82 = 4.83231634067603
83 = 4.773217360616126
84 = 4.773217360616126
85 = 3.1434629185153606
86 = 3.1434629185153606
87 = 2.8532921943654093
88 = 2.8532921943654093
89 = 1.92191005104595
90 = 1.92191005104595
91 = 1.944168135085433
92 = 1.944168135085433
93 = 1.977041303733852
94 = 1.977041303733852
95 = 1.9496469289031448
96 = 1.9496469289031448
97 = 2.102690681074792
98 = 2.102690681074792
99 = 4.889325089290525
100 = 4.889325089290525
101 = 4.876240344602383
102 = 4.876240344602383
103 = 4.893508307921449
104 = 4.893508307921449
105 = 4.915512702468183
106 = 4.915512702468183
107 = 4.918417323198628
108 = 4.918417323198628
109 = 4.833021400706178
110 = 4.833021400706178
111 = 4.378930296658789
112 = 4.378930296658789
113 = 4.024321336247445
114 = 4.024321336247445
115 = 3.0677958821850977
116 = 3.0677958821850977
117 = 2.7298045894294667
118 = 2.7298045894294667
119 = 3.474810229441868
120 = 3.474810229441868
121 = 4.4633753736253885
122 = 4.4633753736253885
123 = 4.842375937153234
124 = 4.842375937153234
125 = 4.66742829148826
126 = 4.66742829148826
127 = 4.461668918826371
128 = 4.461668918826371
129 = 4.724310980402733
130 = 4.724310980402733
131 = 4.856341427636592
132 = 4.856341427636592
133 = 4.835288393495554
134 = 4.835288393495554
135 = 4.830176589765602
136 = 4.830176589765602
137 = 4.800524472727602
138 = 4.800524472727602
139 = 4.166332372694017
140 = 4.166332372694017
141 = 4.694536824631642
142 = 4.694536824631642
143 = 4.73852825019083
144 = 4.73852825019083
145 = 4.729575789913554
146 = 4.729575789913554
147 = 4.734020587374092
148 = 4.734020587374092
149 = 4.701707085550113
150 = 4.701707085550113
151 = 4.743395139207899
152 = 4.743395139207899
153 = 4.646212295423266
154 = 4.646212295423266
155 = 4.029358956609048
156 = 4.029358956609048
157 = 3.850569575542859
158 = 3.850569575542859
159 = 3.3079034348817293
160 = 3.3079034348817293
161 = 4.605425511874115
162 = 4.605425511874115
163 = 4.584402617555244
164 = 4.584402617555244
165 = 4.577956408743872
166 = 4.577956408743872
167 = 4.528050186570517
168 = 4.528050186570517
169 = 4.604145446007414
170 = 4.604145446007414
171 = 5.0
172 = 5.0
173 = 2.1918857313789473
174 = 2.1918857313789473
175 = 2.6236352109344727
176 = 2.6236352109344727
177 = 3.411544215284371
178 = 3.411544215284371
179 = 3.409358660961992
180 = 3.409358660961992
181 = 3.4129631786177086
182 = 3.4129631786177086
183 = 3.3699566465803783
184 = 3.3699566465803783
185 = 3.3148130259902686
186 = 3.3148130259902686
187 = 4.149459545007593
188 = 4.149459545007593
189 = 4.047371403075571
190 = 4.047371403075571
191 = 3.5436778200688197
192 = 3.5436778200688197
193 = 3.9556128217838262
194 = 3.9556128217838262
195 = 2.559760851687889
196 = 2.559760851687889
197 = 2.2642430694360063
198 = 2.2642430694360063
199 = 2.2940102849847346
200 = 2.2940102849847346
201 = 2.285002813564197
202 = 2.285002813564197
203 = 3.5717227976031287
204 = 3.5717227976031287
205 = 4.749188592875618
206 = 4.749188592875618
207 = 4.579426003366576
208 = 4.579426003366576
209 = 4.093872272753342
210 = 4.093872272753342
211 = 4.195881160240857
212 = 4.195881160240857
213 = 4.4594831638931725
214 = 4.4594831638931725
215 = 4.725744367479942
216 = 4.725744367479942
217 = 3.4382997847920667
218 = 3.4382997847920667
219 = 3.1838657247719793
220 = 3.1838657247719793
221 = 3.423912453714701
222 = 3.423912453714701
223 = 3.400299680212027
224 = 3.400299680212027
225 = 3.4183611025680474
226 = 3.4183611025680474
227 = 3.5996774375642064
228 = 3.5996774375642064
229 = 3.7261722454295763
230 = 3.7261722454295763
231 = 3.1734984715457943
232 = 3.1734984715457943
233 = 4.6766164512050645
234 = 4.6766164512050645
235 = 4.071591225563841
236 = 4.071591225563841
237 = 4.200779736421056
238 = 4.200779736421056
239 = 3.290791053831308
240 = 3.290791053831308
241 = 3.323422320564904
242 = 3.323422320564904
243 = 3.2564459143807953
244 = 3.2564459143807953
245 = 3.2589738515670525
246 = 3.2589738515670525
247 = 3.8646563542778356
248 = 3.8646563542778356
249 = 5.0
250 = 5.0
251 = 4.2706175219962255
252 = 4.2706175219962255
253 = 4.41995697782836
254 = 4.41995697782836
255 = 4.579962674613877
256 = 4.579962674613877
257 = 3.7745103318922957
258 = 3.7745103318922957
259 = 3.6446516145001846
260 = 3.6446516145001846
261 = 4.607044536260878
262 = 4.607044536260878
263 = 4.3347340604970634
264 = 4.3347340604970634
265 = 4.100328481420367
266 = 4.100328481420367
267 = 4.34865798320309
268 = 4.34865798320309
269 = 4.509791713495758
270 = 4.509791713495758
271 = 4.235988273313814
272 = 4.235988273313814
273 = 3.4892005322960387
274 = 3.4892005322960387
275 = 4.441712437511336
276 = 4.441712437511336
277 = 4.4886087430764645
278 = 4.4886087430764645
279 = 4.354556597813111
280 = 4.354556597813111
281 = 4.324272552639833
282 = 4.324272552639833
283 = 4.008503207551036
284 = 4.008503207551036
285 = 4.5932611072200045
286 = 4.5932611072200045
287 = 4.824125586214989
288 = 4.824125586214989
289 = 4.491509888996863
290 = 4.491509888996863
291 = 4.509529401334989
292 = 4.509529401334989
293 = 4.674204512017351
294 = 4.674204512017351
295 = 4.6597067618632915
296 = 4.6597067618632915
297 = 4.598649287244403
298 = 4.598649287244403
299 = 4.566570445897899
300 = 4.566570445897899
301 = 4.548581376130068
302 = 4.548581376130068
303 = 4.604671756066398
304 = 4.604671756066398
305 = 4.623534519483932
306 = 4.623534519483932
307 = 4.67429026599366
308 = 4.67429026599366
309 = 4.612742891192335
310 = 4.612742891192335
311 = 4.363855911429574
312 = 4.363855911429574
313 = 3.774889886122026
314 = 3.774889886122026
315 = 4.143878733644096
316 = 4.143878733644096
317 = 3.2365443795515754
318 = 3.2365443795515754
319 = 2.568275451907521
320 = 2.568275451907521
321 = 4.43255469052208
322 = 4.43255469052208
323 = 4.632014148594102
324 = 4.632014148594102
325 = 4.575503161158098
326 = 4.575503161158098
327 = 4.532174609931079
328 = 4.532174609931079
329 = 4.526178766835108
330 = 4.526178766835108
331 = 3.9523914065488412
332 = 3.9523914065488412
333 = 4.207505443480461
334 = 4.207505443480461
335 = 4.073225086712538
336 = 4.073225086712538
337 = 4.4400804422353035
338 = 4.4400804422353035
339 = 4.47982721528632
340 = 4.47982721528632
341 = 4.376928841880669
342 = 4.376928841880669
343 = 4.368419883389889
344 = 4.368419883389889
345 = 4.37481680670052
346 = 4.37481680670052
347 = 4.63970180514994
348 = 4.63970180514994
# Throughput End

# ======================================================================================================================
# ======================================================================================================================
# CHUNK PARAMETERS
#
# A list of chunk size ratios. The size for streaming a particular chunk at a particular quality level is given by:
#         Total size = base chunk size * chunk size ratio * 2 ^ (quality level - 1)
#
#
# Example:   You'd like to stream the first three chunks in a video at quality levels 1, 2, 3. The base_chunk_size is
#            1Mb and the first three values in the chunk_size_ratios list are 1, 1, 1.
#
#            Size of first chunk:  1 * 1 * 2 ^ (1 - 1) = 1
#            Size of second chunk: 1 * 1 * 2 ^ (2 - 1) = 2
#            Size of third chunk:  1 * 1 * 2 ^ (3 - 1) = 4
#
# Example 2: Usually, streaming at a higher quality takes more bits. However, we may get counterintuitive results when
#            chunk size ratio varies as well. Let's say we're still streaming at quality levels 1, 2, 3. This time,
#            however, we set chunk_size_ratios to 1, 2, .5.
#
#            Size of first chunk:  1 * 1  * 2 ^ (1 - 1) = 1
#            Size of second chunk: 1 * 2  * 2 ^ (2 - 1) = 4
#            Size of third chunk:  1 * .5 * 2 ^ (3 - 1) = 2
#
#            Because variable-bitrate encoding allowed the third chunk to be encoded more cheaply, we could stream at
#            a higher quality and use fewer bits than the second chunk.
#
[chunk_size_ratios]
# Total size = chunk size * chunk size ratio * 2 ^ (quality level - 1)
chunk_size_ratios=
# 240 chunks.    1.000,
    1.000,
    1.000,
    1.200,
    1.400,
    1.400,
    1.000,
    0.600,
    1.200,
    1.400,
    1.600,
    1.800,
    1.800,
    1.800,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.200,
    1.200,
    1.200,
    1.400,
    1.400,
    1.400,
    1.400,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.600,
    1.600,
    1.200,
    1.200,
    0.200,
    0.200,
    0.200,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.200,
    0.200,
    0.200,
    0.200,
    0.200,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.200,
    0.200,
    0.200,
    0.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    1.000,
    1.000,
    1.000,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.400,
    1.200,
    1.200,
    1.200,
    1.000,
    1.000,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    0.600,
    0.400,
    0.400,
    1.600,
    1.600,
    1.600,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    1.200,
    1.200,
    1.200,
    1.200,
    1.400,
    1.000,
    1.000,
    1.000,
    0.600,
    0.600,
    0.600,
    0.400,
    0.600,
    0.600,
    0.600,
    0.600,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.400,
    0.400,
    0.400,
    1.400,
    1.400,
    1.400,
    1.200,
    1.000,
    1.000,
    1.200,
    1.200,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    0.600,
    0.800,
    0.400,
    0.600,
    0.600,
    0.600,
    0.600,
    1.000,
    1.400,
    1.400,
    0.200,
    0.200,
    0.600,
    0.600,
    0.600,
    1.000,
    1.000,
    1.000,
    1.000,
    1.600,
    1.600,
    1.600,
    1.400,
    1.600,
    1.600,
    1.800,
    1.800,
    1.800,
    1.600,
    1.800,
    1.800,
    1.600,
    1.600,
    1.400,
    1.400,
    1.400,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.600,
    1.600,
    1.600,
    1.600,
    1.000,
    1.000,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.000,
    0.600,
# Chunk Size Ratios End
