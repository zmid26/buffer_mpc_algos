# ======================================================================================================================
# ======================================================================================================================
# VIDEO PARAMETERS
# Parameters for the specific video file being streamed

[video]
chunk_length=        1        # Seconds per chunk
base_chunk_size=     1        # Mb for quality level 1. Quality level 2 is doubled, 3 is quadrupled..
client_buffer_size=  5       # max seconds of video stored by client program

# ======================================================================================================================
# ======================================================================================================================
# QUALITY PARAMETERS
#
# User Quality of Experience formula:
# [ + (Total chunk quality) * (Quality Coefficient)
#   - (Total chunk variation) * (Variation Coefficient)
#   - (Total rebuffer time) * (Rebuffering Coefficient)
#   / Video Length = User Quality of Experience
#
# Shorthand: [(tot_qual * qual_coef) - (tot_var * var_coef) - (rebuf_time * rebuf_coef)] / video_length = QoE
#
# Example: Video is made of three chunks, streamed with quality 3, quality 1, and quality 3 respectively. Each chunk is
#          3 seconds long. All coefficients are 1, and the video buffers for 2 seconds total.
#
#          Total quality: 3 + 1 + 3 = 7
#          Total variation: |3 - 1| + |1 - 3| = 4
#          Rebuffer time: 2
#          Video length: 3 * 3 = 9
#          QoE = [(tot_qual * qual_coef) - (tot_var * var_coef) - (rebuf_time * rebuf_coef)] / video_length
#          QoE = [(   7     *     1    ) - (   4    *    1    ) - (     2     *      1    )] /      9
#              = .11

[quality]
quality_levels=                 3         # User can choose between 3 quality levels
quality_coefficient=            2         # See above
variation_coefficient=          1         # See above
rebuffering_coefficient=        8         # See above


# ======================================================================================================================
# ======================================================================================================================
# THROUGHPUT PARAMETERS
#
# Formatted as a list: CHANGE TO Mb
#         Start Time (Seconds) = New Throughput (Mbps)
#         e.g. 0=     1
#              10=    5
#              25=    2
#              implies that from simulated time 0 to 10 seconds, the throughput is 1Mbps. At 10 seconds, it changes to
#              5Mbps. Then, at 25 seconds, it changes to 2Mbps and stays there for the rest of the test.

[throughput]
# custom throughput from oboe
0 = 4.024114411751259
1 = 3.8969024228989784
2 = 3.8969024228989784
3 = 4.33380834195365
4 = 4.33380834195365
5 = 3.602030735997678
6 = 3.602030735997678
7 = 3.3199970984392273
8 = 3.3199970984392273
9 = 4.31115084989731
10 = 4.31115084989731
11 = 4.419571569055616
12 = 4.419571569055616
13 = 3.7542633004520254
14 = 3.7542633004520254
15 = 4.407651101431059
16 = 4.407651101431059
17 = 2.9224798654279023
18 = 2.9224798654279023
19 = 4.918369242357963
20 = 4.918369242357963
21 = 3.3561501906067637
22 = 3.3561501906067637
23 = 2.5782900017668533
24 = 2.5782900017668533
25 = 3.9859164197855588
26 = 3.9859164197855588
27 = 3.951701567562301
28 = 3.951701567562301
29 = 3.9238113605384894
30 = 3.9238113605384894
31 = 3.330860037912575
32 = 3.330860037912575
33 = 3.240833423950135
34 = 3.240833423950135
35 = 3.5329966385610345
36 = 3.5329966385610345
37 = 4.028907672562056
38 = 4.028907672562056
39 = 3.978862863251929
40 = 3.978862863251929
41 = 4.245414217655426
42 = 4.245414217655426
43 = 4.289397114932007
44 = 4.289397114932007
45 = 4.950429690092271
46 = 4.950429690092271
47 = 4.93109403803964
48 = 4.93109403803964
49 = 4.789162042598898
50 = 4.789162042598898
51 = 3.8976182432233
52 = 3.8976182432233
53 = 3.352464508282015
54 = 3.352464508282015
55 = 4.37783687537653
56 = 4.37783687537653
57 = 3.655739242927152
58 = 3.655739242927152
59 = 3.4642238273147044
60 = 3.4642238273147044
61 = 3.9068686689694685
62 = 3.9068686689694685
63 = 5.0
64 = 5.0
65 = 3.7207583211012607
66 = 3.7207583211012607
67 = 2.969605864578151
68 = 2.969605864578151
69 = 2.9923182845898486
70 = 2.9923182845898486
71 = 2.9462768947625766
72 = 2.9462768947625766
73 = 2.9395742789106976
74 = 2.9395742789106976
75 = 2.9270657192497045
76 = 2.9270657192497045
77 = 3.007494967455701
78 = 3.007494967455701
79 = 2.6236003656301623
80 = 2.6236003656301623
81 = 2.472402859210204
82 = 2.472402859210204
83 = 2.7319120529623935
84 = 2.7319120529623935
85 = 4.256346737637556
86 = 4.256346737637556
87 = 4.740161849700883
88 = 4.740161849700883
89 = 4.694165296320872
90 = 4.694165296320872
91 = 4.456377480855228
92 = 4.456377480855228
93 = 4.456921148212361
94 = 4.456921148212361
95 = 2.3087118786327667
96 = 2.3087118786327667
97 = 2.3087201917662594
98 = 2.3087201917662594
99 = 2.3571832382822224
100 = 2.3571832382822224
101 = 2.4428732611459574
102 = 2.4428732611459574
103 = 2.4413947985695237
104 = 2.4413947985695237
105 = 3.527995246646367
106 = 3.527995246646367
107 = 4.862459602025242
108 = 4.862459602025242
109 = 4.867137152608402
110 = 4.867137152608402
111 = 4.7010834840441635
112 = 4.7010834840441635
113 = 4.673061994517637
114 = 4.673061994517637
115 = 4.798811593349825
116 = 4.798811593349825
117 = 4.999466444347027
118 = 4.999466444347027
119 = 5.0
120 = 5.0
121 = 3.8189689916044802
122 = 3.8189689916044802
123 = 3.7196405830566386
124 = 3.7196405830566386
125 = 3.805212878379903
126 = 3.805212878379903
127 = 4.682895244248627
128 = 4.682895244248627
129 = 4.67693915645686
130 = 4.67693915645686
131 = 2.614885652805294
132 = 2.614885652805294
133 = 1.8104412353532613
134 = 1.8104412353532613
135 = 1.809042952518565
136 = 1.809042952518565
137 = 1.8269950238561206
138 = 1.8269950238561206
139 = 2.8477642594687897
140 = 2.8477642594687897
141 = 2.8786272415408147
142 = 2.8786272415408147
143 = 3.350550275288672
144 = 3.350550275288672
145 = 3.654928405549331
146 = 3.654928405549331
147 = 3.390044263896761
148 = 3.390044263896761
149 = 3.389549369112244
150 = 3.389549369112244
151 = 3.184507982113866
152 = 3.184507982113866
153 = 2.841499185040688
154 = 2.841499185040688
155 = 2.841684273791854
156 = 2.841684273791854
157 = 1.5748064821181431
158 = 1.5748064821181431
159 = 1.4463721060455241
160 = 1.4463721060455241
161 = 0.9044662033324018
162 = 0.9044662033324018
163 = 0.9514336447971616
164 = 0.9514336447971616
165 = 3.742360936021962
166 = 3.742360936021962
167 = 3.7903883327742856
168 = 3.7903883327742856
169 = 3.790979320377652
170 = 3.790979320377652
171 = 3.767396356505981
172 = 3.767396356505981
173 = 3.858513953579545
174 = 3.858513953579545
175 = 4.116464907735701
176 = 4.116464907735701
177 = 4.311624089279793
178 = 4.311624089279793
179 = 4.332106777773235
180 = 4.332106777773235
181 = 4.001751073058444
182 = 4.001751073058444
183 = 4.1684333390512505
184 = 4.1684333390512505
185 = 4.176725601087449
186 = 4.176725601087449
187 = 3.998398947179923
188 = 3.998398947179923
189 = 3.999017172253164
190 = 3.999017172253164
191 = 4.326000616993706
192 = 4.326000616993706
193 = 4.476455584493697
194 = 4.476455584493697
195 = 4.323224283383063
196 = 4.323224283383063
197 = 4.273454043771039
198 = 4.273454043771039
199 = 4.276114593904254
200 = 4.276114593904254
201 = 4.270627493728679
202 = 4.270627493728679
203 = 4.275219406538447
204 = 4.275219406538447
205 = 4.46386617941582
206 = 4.46386617941582
207 = 4.460131799797932
208 = 4.460131799797932
209 = 4.31558569443833
210 = 4.31558569443833
211 = 4.1919087683571234
212 = 4.1919087683571234
213 = 4.478773583472168
214 = 4.478773583472168
215 = 4.314843178422179
216 = 4.314843178422179
217 = 4.504962066758723
218 = 4.504962066758723
219 = 4.049470131890469
220 = 4.049470131890469
221 = 4.581311542171474
222 = 4.581311542171474
223 = 4.744960994177626
224 = 4.744960994177626
225 = 4.459323466853821
226 = 4.459323466853821
227 = 4.556864044583218
228 = 4.556864044583218
229 = 4.685452250006391
230 = 4.685452250006391
231 = 4.5289193247267985
232 = 4.5289193247267985
233 = 4.678552502764242
234 = 4.678552502764242
235 = 4.514268172421193
236 = 4.514268172421193
237 = 4.357696176651343
238 = 4.357696176651343
239 = 4.6209068226761225
240 = 4.6209068226761225
241 = 4.72981276278582
242 = 4.72981276278582
243 = 4.378430667673195
244 = 4.378430667673195
245 = 4.523892291383921
246 = 4.523892291383921
247 = 4.561713761916778
248 = 4.561713761916778
249 = 4.60841296161101
250 = 4.60841296161101
251 = 4.368143555392633
252 = 4.368143555392633
253 = 4.292836145377697
254 = 4.292836145377697
255 = 4.42961136464037
256 = 4.42961136464037
257 = 4.746322720557385
258 = 4.746322720557385
259 = 4.776713930499983
260 = 4.776713930499983
261 = 5.0
262 = 5.0
263 = 1.671876267730029
264 = 1.671876267730029
265 = 1.6972539613582005
266 = 1.6972539613582005
267 = 2.2377352016200986
268 = 2.2377352016200986
269 = 3.123985888113685
270 = 3.123985888113685
271 = 4.349023526977432
272 = 4.349023526977432
273 = 4.318121582423898
274 = 4.318121582423898
275 = 2.1705786416810673
276 = 2.1705786416810673
277 = 2.1137429516870916
278 = 2.1137429516870916
279 = 2.7956036831708198
280 = 2.7956036831708198
281 = 3.1038027473486225
282 = 3.1038027473486225
283 = 2.70734380615329
284 = 2.70734380615329
285 = 1.6222818767271772
286 = 1.6222818767271772
287 = 2.2041796129280753
288 = 2.2041796129280753
289 = 2.8042282264112615
290 = 2.8042282264112615
291 = 2.211758898860085
292 = 2.211758898860085
293 = 1.7853875745650538
294 = 1.7853875745650538
295 = 3.9547187311777163
296 = 3.9547187311777163
297 = 4.528509509559154
298 = 4.528509509559154
299 = 3.466075478765493
300 = 3.466075478765493
301 = 2.680625517701405
302 = 2.680625517701405
303 = 2.791851141822457
304 = 2.791851141822457
305 = 2.2805049089683775
306 = 2.2805049089683775
307 = 2.317379443006685
308 = 2.317379443006685
309 = 1.2160487488886411
310 = 1.2160487488886411
311 = 1.1254934740206952
312 = 1.1254934740206952
313 = 1.1269262298192748
314 = 1.1269262298192748
315 = 1.1227893721833886
316 = 1.1227893721833886
317 = 1.1347383708683232
318 = 1.1347383708683232
319 = 1.1953409400538022
320 = 1.1953409400538022
321 = 1.2753040448580903
322 = 1.2753040448580903
323 = 1.3250630950179443
324 = 1.3250630950179443
325 = 1.5723271670375292
326 = 1.5723271670375292
327 = 1.5738352993072888
328 = 1.5738352993072888
329 = 1.569078668755638
330 = 1.569078668755638
331 = 2.257199075606631
332 = 2.257199075606631
333 = 3.7234836853351236
334 = 3.7234836853351236
335 = 2.7103849916471128
336 = 2.7103849916471128
337 = 3.697593819115648
338 = 3.697593819115648
339 = 3.7061562541132864
340 = 3.7061562541132864
341 = 3.700578485849231
342 = 3.700578485849231
343 = 3.5679242600383048
344 = 3.5679242600383048
345 = 3.420444733722186
346 = 3.420444733722186
347 = 3.2942221908724183
348 = 3.2942221908724183
# Throughput End

# ======================================================================================================================
# ======================================================================================================================
# CHUNK PARAMETERS
#
# A list of chunk size ratios. The size for streaming a particular chunk at a particular quality level is given by:
#         Total size = base chunk size * chunk size ratio * 2 ^ (quality level - 1)
#
#
# Example:   You'd like to stream the first three chunks in a video at quality levels 1, 2, 3. The base_chunk_size is
#            1Mb and the first three values in the chunk_size_ratios list are 1, 1, 1.
#
#            Size of first chunk:  1 * 1 * 2 ^ (1 - 1) = 1
#            Size of second chunk: 1 * 1 * 2 ^ (2 - 1) = 2
#            Size of third chunk:  1 * 1 * 2 ^ (3 - 1) = 4
#
# Example 2: Usually, streaming at a higher quality takes more bits. However, we may get counterintuitive results when
#            chunk size ratio varies as well. Let's say we're still streaming at quality levels 1, 2, 3. This time,
#            however, we set chunk_size_ratios to 1, 2, .5.
#
#            Size of first chunk:  1 * 1  * 2 ^ (1 - 1) = 1
#            Size of second chunk: 1 * 2  * 2 ^ (2 - 1) = 4
#            Size of third chunk:  1 * .5 * 2 ^ (3 - 1) = 2
#
#            Because variable-bitrate encoding allowed the third chunk to be encoded more cheaply, we could stream at
#            a higher quality and use fewer bits than the second chunk.
#
[chunk_size_ratios]
# Total size = chunk size * chunk size ratio * 2 ^ (quality level - 1)
chunk_size_ratios=
# 240 chunks.    1.000,
    1.000,
    1.000,
    1.200,
    1.400,
    1.400,
    1.000,
    0.600,
    1.200,
    1.400,
    1.600,
    1.800,
    1.800,
    1.800,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.200,
    1.200,
    1.200,
    1.400,
    1.400,
    1.400,
    1.400,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.600,
    1.600,
    1.200,
    1.200,
    0.200,
    0.200,
    0.200,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.200,
    0.200,
    0.200,
    0.200,
    0.200,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.200,
    0.200,
    0.200,
    0.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    1.000,
    1.000,
    1.000,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.400,
    1.200,
    1.200,
    1.200,
    1.000,
    1.000,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    0.600,
    0.400,
    0.400,
    1.600,
    1.600,
    1.600,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    1.200,
    1.200,
    1.200,
    1.200,
    1.400,
    1.000,
    1.000,
    1.000,
    0.600,
    0.600,
    0.600,
    0.400,
    0.600,
    0.600,
    0.600,
    0.600,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.400,
    0.400,
    0.400,
    1.400,
    1.400,
    1.400,
    1.200,
    1.000,
    1.000,
    1.200,
    1.200,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    0.600,
    0.800,
    0.400,
    0.600,
    0.600,
    0.600,
    0.600,
    1.000,
    1.400,
    1.400,
    0.200,
    0.200,
    0.600,
    0.600,
    0.600,
    1.000,
    1.000,
    1.000,
    1.000,
    1.600,
    1.600,
    1.600,
    1.400,
    1.600,
    1.600,
    1.800,
    1.800,
    1.800,
    1.600,
    1.800,
    1.800,
    1.600,
    1.600,
    1.400,
    1.400,
    1.400,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.600,
    1.600,
    1.600,
    1.600,
    1.000,
    1.000,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.000,
    0.600,
# Chunk Size Ratios End
