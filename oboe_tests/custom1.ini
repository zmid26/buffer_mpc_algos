# ======================================================================================================================
# ======================================================================================================================
# VIDEO PARAMETERS
# Parameters for the specific video file being streamed

[video]
chunk_length=        1        # Seconds per chunk
base_chunk_size=     1        # Mb for quality level 1. Quality level 2 is doubled, 3 is quadrupled..
client_buffer_size=  5       # max seconds of video stored by client program

# ======================================================================================================================
# ======================================================================================================================
# QUALITY PARAMETERS
#
# User Quality of Experience formula:
# [ + (Total chunk quality) * (Quality Coefficient)
#   - (Total chunk variation) * (Variation Coefficient)
#   - (Total rebuffer time) * (Rebuffering Coefficient)
#   / Video Length = User Quality of Experience
#
# Shorthand: [(tot_qual * qual_coef) - (tot_var * var_coef) - (rebuf_time * rebuf_coef)] / video_length = QoE
#
# Example: Video is made of three chunks, streamed with quality 3, quality 1, and quality 3 respectively. Each chunk is
#          3 seconds long. All coefficients are 1, and the video buffers for 2 seconds total.
#
#          Total quality: 3 + 1 + 3 = 7
#          Total variation: |3 - 1| + |1 - 3| = 4
#          Rebuffer time: 2
#          Video length: 3 * 3 = 9
#          QoE = [(tot_qual * qual_coef) - (tot_var * var_coef) - (rebuf_time * rebuf_coef)] / video_length
#          QoE = [(   7     *     1    ) - (   4    *    1    ) - (     2     *      1    )] /      9
#              = .11

[quality]
quality_levels=                 3         # User can choose between 3 quality levels
quality_coefficient=            2         # See above
variation_coefficient=          1         # See above
rebuffering_coefficient=        8         # See above


# ======================================================================================================================
# ======================================================================================================================
# THROUGHPUT PARAMETERS
#
# Formatted as a list: CHANGE TO Mb
#         Start Time (Seconds) = New Throughput (Mbps)
#         e.g. 0=     1
#              10=    5
#              25=    2
#              implies that from simulated time 0 to 10 seconds, the throughput is 1Mbps. At 10 seconds, it changes to
#              5Mbps. Then, at 25 seconds, it changes to 2Mbps and stays there for the rest of the test.

[throughput]
# custom throughput from oboe
0 = 3.361434246787987
1 = 3.361434246787987
2 = 3.3768988172477234
3 = 3.3768988172477234
4 = 3.326537652221075
5 = 3.326537652221075
6 = 3.3240962273578405
7 = 3.3240962273578405
8 = 3.3186160661105446
9 = 3.3186160661105446
10 = 3.31304735691913
11 = 3.31304735691913
12 = 4.008801702748952
13 = 4.008801702748952
14 = 3.6780058692765225
15 = 3.6780058692765225
16 = 4.0165229092371355
17 = 4.0165229092371355
18 = 3.0590646173144216
19 = 3.0590646173144216
20 = 3.381507256175031
21 = 3.381507256175031
22 = 1.2494201578996158
23 = 1.2494201578996158
24 = 2.141705986838028
25 = 2.141705986838028
26 = 2.176179731205304
27 = 2.176179731205304
28 = 2.882584098825866
29 = 2.882584098825866
30 = 3.3454940910901483
31 = 3.3454940910901483
32 = 3.335816856625531
33 = 3.335816856625531
34 = 3.33219547858898
35 = 3.33219547858898
36 = 3.2439720244907266
37 = 3.2439720244907266
38 = 2.879056574362184
39 = 2.879056574362184
40 = 2.873837366399501
41 = 2.873837366399501
42 = 2.872714304354413
43 = 2.872714304354413
44 = 3.136841405275078
45 = 3.136841405275078
46 = 3.7812937544771916
47 = 3.7812937544771916
48 = 3.713973220989461
49 = 3.713973220989461
50 = 2.9555920484823113
51 = 2.9555920484823113
52 = 1.4727083736811544
53 = 1.4727083736811544
54 = 3.969539108730951
55 = 3.969539108730951
56 = 2.989097167571952
57 = 2.989097167571952
58 = 2.514866970163723
59 = 2.514866970163723
60 = 2.209409012277305
61 = 2.209409012277305
62 = 2.536860971195164
63 = 2.536860971195164
64 = 2.860355489199699
65 = 2.860355489199699
66 = 3.1124941154567773
67 = 3.1124941154567773
68 = 4.709504230602487
69 = 4.709504230602487
70 = 4.723462811289626
71 = 4.723462811289626
72 = 4.908914579540053
73 = 4.908914579540053
74 = 5.0
75 = 5.0
76 = 4.816384510315067
77 = 4.816384510315067
78 = 3.2646654162952915
79 = 3.2646654162952915
80 = 2.7747279755700145
81 = 2.7747279755700145
82 = 2.0382467131832644
83 = 2.0382467131832644
84 = 1.9607281078688752
85 = 1.9607281078688752
86 = 1.9249766681010703
87 = 1.9249766681010703
88 = 2.3380452111084367
89 = 2.3380452111084367
90 = 2.4060405702035053
91 = 2.4060405702035053
92 = 2.5161284109104907
93 = 2.5161284109104907
94 = 3.997175550379157
95 = 3.997175550379157
96 = 3.9986513751043935
97 = 3.9986513751043935
98 = 4.385653061918596
99 = 4.385653061918596
100 = 4.432923491108126
101 = 4.432923491108126
102 = 4.437001685328631
103 = 4.437001685328631
104 = 4.354472858359831
105 = 4.354472858359831
106 = 4.335292758619787
107 = 4.335292758619787
108 = 3.3178720649231113
109 = 3.3178720649231113
110 = 3.268879608836339
111 = 3.268879608836339
112 = 2.1199224831776617
113 = 2.1199224831776617
114 = 2.7503199782735215
115 = 2.7503199782735215
116 = 4.088567702030862
117 = 4.088567702030862
118 = 3.439829893724003
119 = 3.439829893724003
120 = 2.7627577784653434
121 = 2.7627577784653434
122 = 3.3947329666479567
123 = 3.3947329666479567
124 = 3.3892877473477894
125 = 3.3892877473477894
126 = 3.4065040422892165
127 = 3.4065040422892165
128 = 4.25289902826906
129 = 4.25289902826906
130 = 4.52817201364597
131 = 4.52817201364597
132 = 3.9189976751440114
133 = 3.9189976751440114
134 = 3.7528754849145725
135 = 3.7528754849145725
136 = 3.703577653075505
137 = 3.703577653075505
138 = 4.172728577614355
139 = 4.172728577614355
140 = 4.963358527993092
141 = 4.963358527993092
142 = 4.9626441261881995
143 = 4.9626441261881995
144 = 3.687057794291892
145 = 3.687057794291892
146 = 3.647362488730314
147 = 3.647362488730314
148 = 3.8119398932668735
149 = 3.8119398932668735
150 = 4.247044694894624
151 = 4.247044694894624
152 = 4.254335931482364
153 = 4.254335931482364
154 = 3.8103189323103255
155 = 3.8103189323103255
156 = 3.7061892833765975
157 = 3.7061892833765975
158 = 3.7472774433480844
159 = 3.7472774433480844
160 = 4.568339191194144
161 = 4.568339191194144
162 = 4.543794787788624
163 = 4.543794787788624
164 = 4.404707282286405
165 = 4.404707282286405
166 = 4.2950978021749915
167 = 4.2950978021749915
168 = 3.8506485553494456
169 = 3.8506485553494456
170 = 3.8327677819641477
171 = 3.8327677819641477
172 = 3.704522993341719
173 = 3.704522993341719
174 = 3.7064714575350637
175 = 3.7064714575350637
176 = 4.236477506686424
177 = 4.236477506686424
178 = 4.2409175175101685
179 = 4.2409175175101685
180 = 4.245779966841057
181 = 4.245779966841057
182 = 4.248703786327307
183 = 4.248703786327307
184 = 4.4303504673148675
185 = 4.4303504673148675
186 = 4.481754172517914
187 = 4.481754172517914
188 = 4.300837355095597
189 = 4.300837355095597
190 = 4.1641770665698425
191 = 4.1641770665698425
192 = 4.501152568226431
193 = 4.501152568226431
194 = 5.0
195 = 5.0
196 = 3.280357741367693
197 = 3.280357741367693
198 = 3.2891995757802377
199 = 3.2891995757802377
200 = 3.2941432889617146
201 = 3.2941432889617146
202 = 3.241238426979754
203 = 3.241238426979754
204 = 3.228504822280191
205 = 3.228504822280191
206 = 3.2256257822565266
207 = 3.2256257822565266
208 = 3.4773165892550617
209 = 3.4773165892550617
210 = 3.2980491071054
211 = 3.2980491071054
212 = 3.87206485436928
213 = 3.87206485436928
214 = 4.889401820221907
215 = 4.889401820221907
216 = 4.021066504550952
217 = 4.021066504550952
218 = 3.826053096352195
219 = 3.826053096352195
220 = 3.5857100093616623
221 = 3.5857100093616623
222 = 3.278086697760995
223 = 3.278086697760995
224 = 4.440338449232763
225 = 4.440338449232763
226 = 4.934112937747842
227 = 4.934112937747842
228 = 4.250542495767858
229 = 4.250542495767858
230 = 4.456131756665109
231 = 4.456131756665109
232 = 4.8924201694964005
233 = 4.8924201694964005
234 = 4.741013605176334
235 = 4.741013605176334
236 = 4.449081293047206
237 = 4.449081293047206
238 = 4.453822530003622
239 = 4.453822530003622
240 = 4.451249063998731
241 = 4.451249063998731
242 = 4.451548026787541
243 = 4.451548026787541
244 = 4.391717957110226
245 = 4.391717957110226
246 = 2.651461073421485
247 = 2.651461073421485
248 = 2.9329504725174536
249 = 2.9329504725174536
250 = 3.805824193712288
251 = 3.805824193712288
252 = 4.4158065153621235
253 = 4.4158065153621235
254 = 4.8546098326784834
255 = 4.8546098326784834
256 = 4.969004271378462
257 = 4.969004271378462
258 = 3.6725332226058827
259 = 3.6725332226058827
260 = 3.017289308929625
261 = 3.017289308929625
262 = 3.5803590402938035
263 = 3.5803590402938035
264 = 2.719209473504562
265 = 2.719209473504562
266 = 3.0511651960629123
267 = 3.0511651960629123
268 = 1.898410976484216
269 = 1.898410976484216
270 = 2.940616882433205
271 = 2.940616882433205
272 = 4.389476497459225
273 = 4.389476497459225
274 = 4.5170881264247145
275 = 4.5170881264247145
276 = 4.943044243581007
277 = 4.943044243581007
278 = 4.895746846811841
279 = 4.895746846811841
280 = 4.910579827300604
281 = 4.910579827300604
282 = 4.811817059745388
283 = 4.811817059745388
284 = 5.0
285 = 5.0
286 = 4.913742657600412
287 = 4.913742657600412
288 = 4.648841426540827
289 = 4.648841426540827
290 = 4.527388457875154
291 = 4.527388457875154
292 = 4.9643953014222815
293 = 4.9643953014222815
294 = 1.3352492797810334
295 = 1.3352492797810334
296 = 2.9365229611003567
297 = 2.9365229611003567
298 = 1.932438927967578
299 = 1.932438927967578
300 = 1.0882783480814238
301 = 1.0882783480814238
302 = 1.080012392945782
303 = 1.080012392945782
304 = 1.836315132833153
305 = 1.836315132833153
306 = 2.3972780781905385
307 = 2.3972780781905385
308 = 2.381917686149654
309 = 2.381917686149654
310 = 1.6278220167930282
311 = 1.6278220167930282
312 = 1.5071380955936373
313 = 1.5071380955936373
314 = 1.4653230611861592
315 = 1.4653230611861592
316 = 1.4600920793466434
317 = 1.4600920793466434
318 = 1.7553371150035586
319 = 1.7553371150035586
320 = 1.6575338458863476
321 = 1.6575338458863476
322 = 1.4799940984995317
323 = 1.4799940984995317
324 = 1.313420712990562
325 = 1.313420712990562
326 = 1.3182071590323463
327 = 1.3182071590323463
328 = 1.513759707653453
329 = 1.513759707653453
330 = 1.5710973919469344
331 = 1.5710973919469344
332 = 1.6536221224599035
333 = 1.6536221224599035
334 = 1.8317048226156571
335 = 1.8317048226156571
336 = 1.8333428561157226
337 = 1.8333428561157226
338 = 1.87849065032507
339 = 1.87849065032507
340 = 1.8860073809411873
341 = 1.8860073809411873
342 = 1.8653488573819783
343 = 1.8653488573819783
344 = 3.0197931785296825
345 = 3.0197931785296825
346 = 5.0
347 = 5.0
348 = 3.799957228975545
# Throughput End

# ======================================================================================================================
# ======================================================================================================================
# CHUNK PARAMETERS
#
# A list of chunk size ratios. The size for streaming a particular chunk at a particular quality level is given by:
#         Total size = base chunk size * chunk size ratio * 2 ^ (quality level - 1)
#
#
# Example:   You'd like to stream the first three chunks in a video at quality levels 1, 2, 3. The base_chunk_size is
#            1Mb and the first three values in the chunk_size_ratios list are 1, 1, 1.
#
#            Size of first chunk:  1 * 1 * 2 ^ (1 - 1) = 1
#            Size of second chunk: 1 * 1 * 2 ^ (2 - 1) = 2
#            Size of third chunk:  1 * 1 * 2 ^ (3 - 1) = 4
#
# Example 2: Usually, streaming at a higher quality takes more bits. However, we may get counterintuitive results when
#            chunk size ratio varies as well. Let's say we're still streaming at quality levels 1, 2, 3. This time,
#            however, we set chunk_size_ratios to 1, 2, .5.
#
#            Size of first chunk:  1 * 1  * 2 ^ (1 - 1) = 1
#            Size of second chunk: 1 * 2  * 2 ^ (2 - 1) = 4
#            Size of third chunk:  1 * .5 * 2 ^ (3 - 1) = 2
#
#            Because variable-bitrate encoding allowed the third chunk to be encoded more cheaply, we could stream at
#            a higher quality and use fewer bits than the second chunk.
#
[chunk_size_ratios]
# Total size = chunk size * chunk size ratio * 2 ^ (quality level - 1)
chunk_size_ratios=
# 240 chunks.    1.000,
    1.000,
    1.000,
    1.200,
    1.400,
    1.400,
    1.000,
    0.600,
    1.200,
    1.400,
    1.600,
    1.800,
    1.800,
    1.800,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.200,
    1.200,
    1.200,
    1.400,
    1.400,
    1.400,
    1.400,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.600,
    1.600,
    1.200,
    1.200,
    0.200,
    0.200,
    0.200,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.200,
    0.200,
    0.200,
    0.200,
    0.200,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.200,
    0.200,
    0.200,
    0.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    1.000,
    1.000,
    1.000,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.400,
    1.200,
    1.200,
    1.200,
    1.000,
    1.000,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    0.600,
    0.400,
    0.400,
    1.600,
    1.600,
    1.600,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    1.200,
    1.200,
    1.200,
    1.200,
    1.400,
    1.000,
    1.000,
    1.000,
    0.600,
    0.600,
    0.600,
    0.400,
    0.600,
    0.600,
    0.600,
    0.600,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.400,
    0.400,
    0.400,
    1.400,
    1.400,
    1.400,
    1.200,
    1.000,
    1.000,
    1.200,
    1.200,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    0.600,
    0.800,
    0.400,
    0.600,
    0.600,
    0.600,
    0.600,
    1.000,
    1.400,
    1.400,
    0.200,
    0.200,
    0.600,
    0.600,
    0.600,
    1.000,
    1.000,
    1.000,
    1.000,
    1.600,
    1.600,
    1.600,
    1.400,
    1.600,
    1.600,
    1.800,
    1.800,
    1.800,
    1.600,
    1.800,
    1.800,
    1.600,
    1.600,
    1.400,
    1.400,
    1.400,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.600,
    1.600,
    1.600,
    1.600,
    1.000,
    1.000,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.000,
    0.600,
# Chunk Size Ratios End
