# ======================================================================================================================
# ======================================================================================================================
# VIDEO PARAMETERS
# Parameters for the specific video file being streamed

[video]
chunk_length=        1        # Seconds per chunk
base_chunk_size=     1        # Mb for quality level 1. Quality level 2 is doubled, 3 is quadrupled..
client_buffer_size=  5       # max seconds of video stored by client program

# ======================================================================================================================
# ======================================================================================================================
# QUALITY PARAMETERS
#
# User Quality of Experience formula:
# [ + (Total chunk quality) * (Quality Coefficient)
#   - (Total chunk variation) * (Variation Coefficient)
#   - (Total rebuffer time) * (Rebuffering Coefficient)
#   / Video Length = User Quality of Experience
#
# Shorthand: [(tot_qual * qual_coef) - (tot_var * var_coef) - (rebuf_time * rebuf_coef)] / video_length = QoE
#
# Example: Video is made of three chunks, streamed with quality 3, quality 1, and quality 3 respectively. Each chunk is
#          3 seconds long. All coefficients are 1, and the video buffers for 2 seconds total.
#
#          Total quality: 3 + 1 + 3 = 7
#          Total variation: |3 - 1| + |1 - 3| = 4
#          Rebuffer time: 2
#          Video length: 3 * 3 = 9
#          QoE = [(tot_qual * qual_coef) - (tot_var * var_coef) - (rebuf_time * rebuf_coef)] / video_length
#          QoE = [(   7     *     1    ) - (   4    *    1    ) - (     2     *      1    )] /      9
#              = .11

[quality]
quality_levels=                 3         # User can choose between 3 quality levels
quality_coefficient=            2         # See above
variation_coefficient=          1         # See above
rebuffering_coefficient=        8         # See above


# ======================================================================================================================
# ======================================================================================================================
# THROUGHPUT PARAMETERS
#
# Formatted as a list: CHANGE TO Mb
#         Start Time (Seconds) = New Throughput (Mbps)
#         e.g. 0=     1
#              10=    5
#              25=    2
#              implies that from simulated time 0 to 10 seconds, the throughput is 1Mbps. At 10 seconds, it changes to
#              5Mbps. Then, at 25 seconds, it changes to 2Mbps and stays there for the rest of the test.

[throughput]
# custom throughput from oboe
0 = 3.1975874444992565
1 = 3.1975874444992565
2 = 2.3452094567382678
3 = 2.3452094567382678
4 = 2.8972088979516246
5 = 2.8972088979516246
6 = 3.629142195324155
7 = 3.629142195324155
8 = 2.481973786415751
9 = 2.481973786415751
10 = 2.551298653759141
11 = 2.551298653759141
12 = 2.9532581921835925
13 = 2.9532581921835925
14 = 2.5102059696542414
15 = 2.5102059696542414
16 = 2.1174627048875543
17 = 2.1174627048875543
18 = 1.79981151852086
19 = 1.79981151852086
20 = 2.2693853948400653
21 = 2.2693853948400653
22 = 3.0270108713074064
23 = 3.0270108713074064
24 = 2.348742669752004
25 = 2.348742669752004
26 = 1.9318936473641917
27 = 1.9318936473641917
28 = 2.112892467460655
29 = 2.112892467460655
30 = 2.3004525953619677
31 = 2.3004525953619677
32 = 2.455416610276259
33 = 2.455416610276259
34 = 2.8571709425192973
35 = 2.8571709425192973
36 = 3.155302043602219
37 = 3.155302043602219
38 = 3.38883691178885
39 = 3.38883691178885
40 = 3.5964227882653366
41 = 3.5964227882653366
42 = 4.0860619210356335
43 = 4.0860619210356335
44 = 3.46809098280328
45 = 3.46809098280328
46 = 4.572740911046015
47 = 4.572740911046015
48 = 5.0
49 = 5.0
50 = 2.806860019079156
51 = 2.806860019079156
52 = 1.6396301009947523
53 = 1.6396301009947523
54 = 2.4897006002944404
55 = 2.4897006002944404
56 = 2.683959591095558
57 = 2.683959591095558
58 = 2.660425546950356
59 = 2.660425546950356
60 = 2.574476101912233
61 = 2.574476101912233
62 = 2.343471089939084
63 = 2.343471089939084
64 = 2.101496272936523
65 = 2.101496272936523
66 = 2.127170249726203
67 = 2.127170249726203
68 = 2.535194439267994
69 = 2.535194439267994
70 = 2.541228423801425
71 = 2.541228423801425
72 = 2.253268502968685
73 = 2.253268502968685
74 = 2.122786833711437
75 = 2.122786833711437
76 = 2.136228632408404
77 = 2.136228632408404
78 = 2.1361360019193074
79 = 2.1361360019193074
80 = 1.9088600013585655
81 = 1.9088600013585655
82 = 2.009270659917604
83 = 2.009270659917604
84 = 2.3111808899070185
85 = 2.3111808899070185
86 = 3.122864994862573
87 = 3.122864994862573
88 = 4.012662060992151
89 = 4.012662060992151
90 = 3.8989173585270622
91 = 3.8989173585270622
92 = 3.8439166855674776
93 = 3.8439166855674776
94 = 1.7188971961495652
95 = 1.7188971961495652
96 = 3.122658131071629
97 = 3.122658131071629
98 = 3.128612573079776
99 = 3.128612573079776
100 = 3.4097793403813235
101 = 3.4097793403813235
102 = 4.334536206862253
103 = 4.334536206862253
104 = 3.5989000074392146
105 = 3.5989000074392146
106 = 2.2080716709951047
107 = 2.2080716709951047
108 = 1.1442000893687096
109 = 1.1442000893687096
110 = 2.0063961164812687
111 = 2.0063961164812687
112 = 3.508465727114813
113 = 3.508465727114813
114 = 4.375472489216035
115 = 4.375472489216035
116 = 4.917115603233974
117 = 4.917115603233974
118 = 5.0
119 = 5.0
120 = 3.9694838075447167
121 = 3.9694838075447167
122 = 4.919665029059436
123 = 4.919665029059436
124 = 4.9099008406251
125 = 4.9099008406251
126 = 3.792482227439029
127 = 3.792482227439029
128 = 3.2397542280749025
129 = 3.2397542280749025
130 = 3.5621411686601085
131 = 3.5621411686601085
132 = 4.072037786970545
133 = 4.072037786970545
134 = 4.362258729208391
135 = 4.362258729208391
136 = 4.689063082237071
137 = 4.689063082237071
138 = 3.3478521754385246
139 = 3.3478521754385246
140 = 2.748935415768687
141 = 2.748935415768687
142 = 2.2567229617987343
143 = 2.2567229617987343
144 = 2.39034144644787
145 = 2.39034144644787
146 = 2.8509844107915145
147 = 2.8509844107915145
148 = 1.8380901439635935
149 = 1.8380901439635935
150 = 1.4611089847889054
151 = 1.4611089847889054
152 = 2.6974720300495343
153 = 2.6974720300495343
154 = 4.10169961797168
155 = 4.10169961797168
156 = 3.884819303685894
157 = 3.884819303685894
158 = 3.722511804234138
159 = 3.722511804234138
160 = 3.6521783846529132
161 = 3.6521783846529132
162 = 3.2696566686131034
163 = 3.2696566686131034
164 = 2.860538076830734
165 = 2.860538076830734
166 = 3.426239395337535
167 = 3.426239395337535
168 = 3.4287856079059527
169 = 3.4287856079059527
170 = 3.4202824432288454
171 = 3.4202824432288454
172 = 2.4823655953446586
173 = 2.4823655953446586
174 = 2.5029794178669325
175 = 2.5029794178669325
176 = 2.445493654853216
177 = 2.445493654853216
178 = 2.562743912722821
179 = 2.562743912722821
180 = 4.5998968693453515
181 = 4.5998968693453515
182 = 4.9753213153193
183 = 4.9753213153193
184 = 4.595449880794628
185 = 4.595449880794628
186 = 2.9924394282277085
187 = 2.9924394282277085
188 = 3.3573655120159795
189 = 3.3573655120159795
190 = 3.35097402068762
191 = 3.35097402068762
192 = 4.465286207132277
193 = 4.465286207132277
194 = 3.4857165907241834
195 = 3.4857165907241834
196 = 3.572790739850066
197 = 3.572790739850066
198 = 3.237910020026544
199 = 3.237910020026544
200 = 3.6572033030007094
201 = 3.6572033030007094
202 = 3.759698759154765
203 = 3.759698759154765
204 = 3.2906179590114166
205 = 3.2906179590114166
206 = 3.734330618932378
207 = 3.734330618932378
208 = 4.254171138945252
209 = 4.254171138945252
210 = 2.946020288794613
211 = 2.946020288794613
212 = 4.018283003786242
213 = 4.018283003786242
214 = 3.593003563999096
215 = 3.593003563999096
216 = 2.566415213217822
217 = 2.566415213217822
218 = 3.7136617192091235
219 = 3.7136617192091235
220 = 3.599174427405928
221 = 3.599174427405928
222 = 3.616475485132178
223 = 3.616475485132178
224 = 3.319611943378387
225 = 3.319611943378387
226 = 3.096062819621677
227 = 3.096062819621677
228 = 3.582927554238959
229 = 3.582927554238959
230 = 3.3936953904251297
231 = 3.3936953904251297
232 = 3.7940517489119987
233 = 3.7940517489119987
234 = 3.43875967077872
235 = 3.43875967077872
236 = 4.023262966412291
237 = 4.023262966412291
238 = 3.1926634662148463
239 = 3.1926634662148463
240 = 4.598397437029464
241 = 4.598397437029464
242 = 4.583365972798569
243 = 4.583365972798569
244 = 4.155264193748565
245 = 4.155264193748565
246 = 3.5946483539822296
247 = 3.5946483539822296
248 = 4.081034750103706
249 = 4.081034750103706
250 = 3.4947559191300654
251 = 3.4947559191300654
252 = 4.0049454045980575
253 = 4.0049454045980575
254 = 3.9344011978605935
255 = 3.9344011978605935
256 = 4.0581956282332365
257 = 4.0581956282332365
258 = 4.057575908532087
259 = 4.057575908532087
260 = 4.171888681257626
261 = 4.171888681257626
262 = 4.9534596777570945
263 = 4.9534596777570945
264 = 5.0
265 = 5.0
266 = 4.64128230925709
267 = 4.64128230925709
268 = 4.120752435706675
269 = 4.120752435706675
270 = 4.491147491326096
271 = 4.491147491326096
272 = 4.541245078900694
273 = 4.541245078900694
274 = 4.537259971179193
275 = 4.537259971179193
276 = 4.437785806440047
277 = 4.437785806440047
278 = 4.441720347904567
279 = 4.441720347904567
280 = 4.4314469000329595
281 = 4.4314469000329595
282 = 4.563926755101914
283 = 4.563926755101914
284 = 4.641317460274958
285 = 4.641317460274958
286 = 4.532041754701365
287 = 4.532041754701365
288 = 4.764275572152962
289 = 4.764275572152962
290 = 4.977790343901873
291 = 4.977790343901873
292 = 4.493960701709334
293 = 4.493960701709334
294 = 3.934798434795926
295 = 3.934798434795926
296 = 3.9344350591633726
297 = 3.9344350591633726
298 = 3.9419218562305187
299 = 3.9419218562305187
300 = 4.601235430215482
301 = 4.601235430215482
302 = 4.617344328992275
303 = 4.617344328992275
304 = 3.971101015710872
305 = 3.971101015710872
306 = 3.971272179321341
307 = 3.971272179321341
308 = 4.192823715367503
309 = 4.192823715367503
310 = 4.1917411709240815
311 = 4.1917411709240815
312 = 4.201140076610261
313 = 4.201140076610261
314 = 4.190676969282828
315 = 4.190676969282828
316 = 4.199623074030591
317 = 4.199623074030591
318 = 4.843220076831641
319 = 4.843220076831641
320 = 5.0
321 = 5.0
322 = 4.8812663892858295
323 = 4.8812663892858295
324 = 4.8405911437671865
325 = 4.8405911437671865
326 = 4.602898520235858
327 = 4.602898520235858
328 = 4.900041294946
329 = 4.900041294946
330 = 4.695844238949572
331 = 4.695844238949572
332 = 4.622190173884976
333 = 4.622190173884976
334 = 4.778213582727763
335 = 4.778213582727763
336 = 4.780710679785952
337 = 4.780710679785952
338 = 4.904634578292197
339 = 4.904634578292197
340 = 4.893412303028894
341 = 4.893412303028894
342 = 4.808734205304521
343 = 4.808734205304521
344 = 4.393146261410758
345 = 4.393146261410758
346 = 4.153137810114274
347 = 4.153137810114274
348 = 4.95699752853537
# Throughput End

# ======================================================================================================================
# ======================================================================================================================
# CHUNK PARAMETERS
#
# A list of chunk size ratios. The size for streaming a particular chunk at a particular quality level is given by:
#         Total size = base chunk size * chunk size ratio * 2 ^ (quality level - 1)
#
#
# Example:   You'd like to stream the first three chunks in a video at quality levels 1, 2, 3. The base_chunk_size is
#            1Mb and the first three values in the chunk_size_ratios list are 1, 1, 1.
#
#            Size of first chunk:  1 * 1 * 2 ^ (1 - 1) = 1
#            Size of second chunk: 1 * 1 * 2 ^ (2 - 1) = 2
#            Size of third chunk:  1 * 1 * 2 ^ (3 - 1) = 4
#
# Example 2: Usually, streaming at a higher quality takes more bits. However, we may get counterintuitive results when
#            chunk size ratio varies as well. Let's say we're still streaming at quality levels 1, 2, 3. This time,
#            however, we set chunk_size_ratios to 1, 2, .5.
#
#            Size of first chunk:  1 * 1  * 2 ^ (1 - 1) = 1
#            Size of second chunk: 1 * 2  * 2 ^ (2 - 1) = 4
#            Size of third chunk:  1 * .5 * 2 ^ (3 - 1) = 2
#
#            Because variable-bitrate encoding allowed the third chunk to be encoded more cheaply, we could stream at
#            a higher quality and use fewer bits than the second chunk.
#
[chunk_size_ratios]
# Total size = chunk size * chunk size ratio * 2 ^ (quality level - 1)
chunk_size_ratios=
# 240 chunks.    1.000,
    1.000,
    1.000,
    1.200,
    1.400,
    1.400,
    1.000,
    0.600,
    1.200,
    1.400,
    1.600,
    1.800,
    1.800,
    1.800,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.200,
    1.200,
    1.200,
    1.400,
    1.400,
    1.400,
    1.400,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.600,
    1.600,
    1.200,
    1.200,
    0.200,
    0.200,
    0.200,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.200,
    0.200,
    0.200,
    0.200,
    0.200,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.200,
    0.200,
    0.200,
    0.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    1.000,
    1.000,
    1.000,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.400,
    1.200,
    1.200,
    1.200,
    1.000,
    1.000,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    0.600,
    0.400,
    0.400,
    1.600,
    1.600,
    1.600,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    1.200,
    1.200,
    1.200,
    1.200,
    1.400,
    1.000,
    1.000,
    1.000,
    0.600,
    0.600,
    0.600,
    0.400,
    0.600,
    0.600,
    0.600,
    0.600,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.400,
    0.400,
    0.400,
    1.400,
    1.400,
    1.400,
    1.200,
    1.000,
    1.000,
    1.200,
    1.200,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    0.600,
    0.800,
    0.400,
    0.600,
    0.600,
    0.600,
    0.600,
    1.000,
    1.400,
    1.400,
    0.200,
    0.200,
    0.600,
    0.600,
    0.600,
    1.000,
    1.000,
    1.000,
    1.000,
    1.600,
    1.600,
    1.600,
    1.400,
    1.600,
    1.600,
    1.800,
    1.800,
    1.800,
    1.600,
    1.800,
    1.800,
    1.600,
    1.600,
    1.400,
    1.400,
    1.400,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.600,
    1.600,
    1.600,
    1.600,
    1.000,
    1.000,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.000,
    0.600,
# Chunk Size Ratios End
