# ======================================================================================================================
# ======================================================================================================================
# VIDEO PARAMETERS
# Parameters for the specific video file being streamed

[video]
chunk_length=        1        # Seconds per chunk
base_chunk_size=     1        # Mb for quality level 1. Quality level 2 is doubled, 3 is quadrupled..
client_buffer_size=  5       # max seconds of video stored by client program

# ======================================================================================================================
# ======================================================================================================================
# QUALITY PARAMETERS
#
# User Quality of Experience formula:
# [ + (Total chunk quality) * (Quality Coefficient)
#   - (Total chunk variation) * (Variation Coefficient)
#   - (Total rebuffer time) * (Rebuffering Coefficient)
#   / Video Length = User Quality of Experience
#
# Shorthand: [(tot_qual * qual_coef) - (tot_var * var_coef) - (rebuf_time * rebuf_coef)] / video_length = QoE
#
# Example: Video is made of three chunks, streamed with quality 3, quality 1, and quality 3 respectively. Each chunk is
#          3 seconds long. All coefficients are 1, and the video buffers for 2 seconds total.
#
#          Total quality: 3 + 1 + 3 = 7
#          Total variation: |3 - 1| + |1 - 3| = 4
#          Rebuffer time: 2
#          Video length: 3 * 3 = 9
#          QoE = [(tot_qual * qual_coef) - (tot_var * var_coef) - (rebuf_time * rebuf_coef)] / video_length
#          QoE = [(   7     *     1    ) - (   4    *    1    ) - (     2     *      1    )] /      9
#              = .11

[quality]
quality_levels=                 3         # User can choose between 3 quality levels
quality_coefficient=            2         # See above
variation_coefficient=          1         # See above
rebuffering_coefficient=        8         # See above


# ======================================================================================================================
# ======================================================================================================================
# THROUGHPUT PARAMETERS
#
# Formatted as a list: CHANGE TO Mb
#         Start Time (Seconds) = New Throughput (Mbps)
#         e.g. 0=     1
#              10=    5
#              25=    2
#              implies that from simulated time 0 to 10 seconds, the throughput is 1Mbps. At 10 seconds, it changes to
#              5Mbps. Then, at 25 seconds, it changes to 2Mbps and stays there for the rest of the test.

[throughput]
# custom throughput from oboe
0 = 4.701181044087434
1 = 4.701181044087434
2 = 4.508317331423336
3 = 4.508317331423336
4 = 4.832210037967341
5 = 4.832210037967341
6 = 4.951014027356047
7 = 4.951014027356047
8 = 4.724048336620142
9 = 4.724048336620142
10 = 4.66796912605166
11 = 4.66796912605166
12 = 4.939191158772079
13 = 4.939191158772079
14 = 4.952336759750998
15 = 4.952336759750998
16 = 4.852102533884075
17 = 4.852102533884075
18 = 4.733487944049378
19 = 4.733487944049378
20 = 4.737232938925008
21 = 4.737232938925008
22 = 4.7641536042889605
23 = 4.7641536042889605
24 = 4.772341886922934
25 = 4.772341886922934
26 = 4.766875561583036
27 = 4.766875561583036
28 = 4.683961211798408
29 = 4.683961211798408
30 = 4.851052539477985
31 = 4.851052539477985
32 = 4.600431091009653
33 = 4.600431091009653
34 = 4.1364366224133
35 = 4.1364366224133
36 = 4.0372254929306095
37 = 4.0372254929306095
38 = 4.806826725526292
39 = 4.806826725526292
40 = 4.8502068778062695
41 = 4.8502068778062695
42 = 4.794929666785413
43 = 4.794929666785413
44 = 4.841845003360446
45 = 4.841845003360446
46 = 5.0
47 = 5.0
48 = 4.867334868881347
49 = 4.867334868881347
50 = 4.754467993827501
51 = 4.754467993827501
52 = 4.7395163158433355
53 = 4.7395163158433355
54 = 4.733261604716317
55 = 4.733261604716317
56 = 4.537829958095686
57 = 4.537829958095686
58 = 4.549943252733573
59 = 4.549943252733573
60 = 4.5639901091187784
61 = 4.5639901091187784
62 = 4.810493097032098
63 = 4.810493097032098
64 = 4.6311921807680765
65 = 4.6311921807680765
66 = 4.872523825146341
67 = 4.872523825146341
68 = 4.878903680822103
69 = 4.878903680822103
70 = 4.9505065212718
71 = 4.9505065212718
72 = 4.933651768985928
73 = 4.933651768985928
74 = 4.881933970675979
75 = 4.881933970675979
76 = 4.877785798286717
77 = 4.877785798286717
78 = 4.865890653834467
79 = 4.865890653834467
80 = 4.8366389505665754
81 = 4.8366389505665754
82 = 4.567792015539098
83 = 4.567792015539098
84 = 4.811363700951634
85 = 4.811363700951634
86 = 4.9496804353807855
87 = 4.9496804353807855
88 = 4.8916327898030785
89 = 4.8916327898030785
90 = 4.880145902001385
91 = 4.880145902001385
92 = 4.877475641695515
93 = 4.877475641695515
94 = 4.873297300196368
95 = 4.873297300196368
96 = 3.578673223131132
97 = 3.578673223131132
98 = 4.386723146216513
99 = 4.386723146216513
100 = 4.86773511178726
101 = 4.86773511178726
102 = 4.616223597624682
103 = 4.616223597624682
104 = 4.417694586684014
105 = 4.417694586684014
106 = 3.5440739104660937
107 = 3.5440739104660937
108 = 3.547784556706638
109 = 3.547784556706638
110 = 3.5450498386309737
111 = 3.5450498386309737
112 = 3.550110275319077
113 = 3.550110275319077
114 = 3.5587958312831125
115 = 3.5587958312831125
116 = 3.555747593934277
117 = 3.555747593934277
118 = 3.991507120485987
119 = 3.991507120485987
120 = 5.0
121 = 5.0
122 = 4.826617656229021
123 = 4.826617656229021
124 = 4.652480989990798
125 = 4.652480989990798
126 = 4.714302446313676
127 = 4.714302446313676
128 = 4.786441264686613
129 = 4.786441264686613
130 = 4.812186670636961
131 = 4.812186670636961
132 = 4.729981276384002
133 = 4.729981276384002
134 = 4.627581428724877
135 = 4.627581428724877
136 = 4.922900756051501
137 = 4.922900756051501
138 = 4.708672172604778
139 = 4.708672172604778
140 = 4.6780470670388805
141 = 4.6780470670388805
142 = 4.786073464957284
143 = 4.786073464957284
144 = 4.804791827418342
145 = 4.804791827418342
146 = 4.662350257055528
147 = 4.662350257055528
148 = 4.7730777975263
149 = 4.7730777975263
150 = 4.79862596205704
151 = 4.79862596205704
152 = 4.726816998854269
153 = 4.726816998854269
154 = 4.808874669059194
155 = 4.808874669059194
156 = 4.3283381868340784
157 = 4.3283381868340784
158 = 4.669132460081755
159 = 4.669132460081755
160 = 4.697724728464181
161 = 4.697724728464181
162 = 4.5755451448653215
163 = 4.5755451448653215
164 = 4.755919373627405
165 = 4.755919373627405
166 = 4.771285973899789
167 = 4.771285973899789
168 = 4.332331788584086
169 = 4.332331788584086
170 = 4.773353844156605
171 = 4.773353844156605
172 = 4.803703172011355
173 = 4.803703172011355
174 = 4.334058995851996
175 = 4.334058995851996
176 = 4.803014370076433
177 = 4.803014370076433
178 = 4.378578339009913
179 = 4.378578339009913
180 = 4.4836649538798055
181 = 4.4836649538798055
182 = 4.710819908940794
183 = 4.710819908940794
184 = 4.973076440147445
185 = 4.973076440147445
186 = 5.0
187 = 5.0
188 = 4.879360292396936
189 = 4.879360292396936
190 = 4.8702752718653155
191 = 4.8702752718653155
192 = 4.871324417142249
193 = 4.871324417142249
194 = 3.7427470310291318
195 = 3.7427470310291318
196 = 3.8265787435970555
197 = 3.8265787435970555
198 = 3.7983650067462205
199 = 3.7983650067462205
200 = 3.7036343901473048
201 = 3.7036343901473048
202 = 2.984919375461201
203 = 2.984919375461201
204 = 3.1102087972202908
205 = 3.1102087972202908
206 = 2.991044979682749
207 = 2.991044979682749
208 = 2.189441455204229
209 = 2.189441455204229
210 = 3.585740568742046
211 = 3.585740568742046
212 = 3.6178497027154277
213 = 3.6178497027154277
214 = 3.2559730445136403
215 = 3.2559730445136403
216 = 3.4706602281718024
217 = 3.4706602281718024
218 = 3.202654790191956
219 = 3.202654790191956
220 = 2.6796420193820647
221 = 2.6796420193820647
222 = 3.8355593745156735
223 = 3.8355593745156735
224 = 3.3102513910775233
225 = 3.3102513910775233
226 = 2.937193691597759
227 = 2.937193691597759
228 = 3.688639907687008
229 = 3.688639907687008
230 = 3.5757442129579182
231 = 3.5757442129579182
232 = 2.6555833503677646
233 = 2.6555833503677646
234 = 4.006900923197506
235 = 4.006900923197506
236 = 3.559620227584391
237 = 3.559620227584391
238 = 2.8336294911152193
239 = 2.8336294911152193
240 = 3.297644260765102
241 = 3.297644260765102
242 = 3.357367597745813
243 = 3.357367597745813
244 = 3.05135038440857
245 = 3.05135038440857
246 = 3.2126112089085606
247 = 3.2126112089085606
248 = 3.043501489512206
249 = 3.043501489512206
250 = 3.1892201747815054
251 = 3.1892201747815054
252 = 4.039464279975392
253 = 4.039464279975392
254 = 3.9851539177489914
255 = 3.9851539177489914
256 = 3.4203731751401634
257 = 3.4203731751401634
258 = 3.311411380241791
259 = 3.311411380241791
260 = 3.3735903424853513
261 = 3.3735903424853513
262 = 3.114187269355928
263 = 3.114187269355928
264 = 2.9136505229159484
265 = 2.9136505229159484
266 = 3.5688721504477865
267 = 3.5688721504477865
268 = 3.7759523633102745
269 = 3.7759523633102745
270 = 2.9053927211387327
271 = 2.9053927211387327
272 = 3.760847307718331
273 = 3.760847307718331
274 = 3.1087512987454913
275 = 3.1087512987454913
276 = 3.413404313089616
277 = 3.413404313089616
278 = 3.4487338228773963
279 = 3.4487338228773963
280 = 3.4698173620335853
281 = 3.4698173620335853
282 = 4.94124253943768
283 = 4.94124253943768
284 = 5.0
285 = 5.0
286 = 4.900442265302928
287 = 4.900442265302928
288 = 4.895374353113094
289 = 4.895374353113094
290 = 4.886431008295752
291 = 4.886431008295752
292 = 4.875430077055892
293 = 4.875430077055892
294 = 4.936070033768966
295 = 4.936070033768966
296 = 4.809255461369788
297 = 4.809255461369788
298 = 4.479552506255644
299 = 4.479552506255644
300 = 4.532210722256588
301 = 4.532210722256588
302 = 4.19737316030954
303 = 4.19737316030954
304 = 3.8424949360571863
305 = 3.8424949360571863
306 = 3.406508817426629
307 = 3.406508817426629
308 = 4.399629685272062
309 = 4.399629685272062
310 = 4.658703658835555
311 = 4.658703658835555
312 = 3.5226326218876274
313 = 3.5226326218876274
314 = 2.033614639352402
315 = 2.033614639352402
316 = 4.1423854633209976
317 = 4.1423854633209976
318 = 4.539062619352363
319 = 4.539062619352363
320 = 3.5029045400356082
321 = 3.5029045400356082
322 = 3.7633696517977073
323 = 3.7633696517977073
324 = 4.084492874790166
325 = 4.084492874790166
326 = 2.718384608141827
327 = 2.718384608141827
328 = 3.5767070704557486
329 = 3.5767070704557486
330 = 2.262250496229527
331 = 2.262250496229527
332 = 2.559539701845911
333 = 2.559539701845911
334 = 3.015742377283166
335 = 3.015742377283166
336 = 4.853680674252054
337 = 4.853680674252054
338 = 4.302196146224243
339 = 4.302196146224243
340 = 4.641342974675408
341 = 4.641342974675408
342 = 4.300890677934729
343 = 4.300890677934729
344 = 4.428276299661548
345 = 4.428276299661548
346 = 4.4517788749752265
347 = 4.4517788749752265
348 = 4.238791720659685
# Throughput End

# ======================================================================================================================
# ======================================================================================================================
# CHUNK PARAMETERS
#
# A list of chunk size ratios. The size for streaming a particular chunk at a particular quality level is given by:
#         Total size = base chunk size * chunk size ratio * 2 ^ (quality level - 1)
#
#
# Example:   You'd like to stream the first three chunks in a video at quality levels 1, 2, 3. The base_chunk_size is
#            1Mb and the first three values in the chunk_size_ratios list are 1, 1, 1.
#
#            Size of first chunk:  1 * 1 * 2 ^ (1 - 1) = 1
#            Size of second chunk: 1 * 1 * 2 ^ (2 - 1) = 2
#            Size of third chunk:  1 * 1 * 2 ^ (3 - 1) = 4
#
# Example 2: Usually, streaming at a higher quality takes more bits. However, we may get counterintuitive results when
#            chunk size ratio varies as well. Let's say we're still streaming at quality levels 1, 2, 3. This time,
#            however, we set chunk_size_ratios to 1, 2, .5.
#
#            Size of first chunk:  1 * 1  * 2 ^ (1 - 1) = 1
#            Size of second chunk: 1 * 2  * 2 ^ (2 - 1) = 4
#            Size of third chunk:  1 * .5 * 2 ^ (3 - 1) = 2
#
#            Because variable-bitrate encoding allowed the third chunk to be encoded more cheaply, we could stream at
#            a higher quality and use fewer bits than the second chunk.
#
[chunk_size_ratios]
# Total size = chunk size * chunk size ratio * 2 ^ (quality level - 1)
chunk_size_ratios=
# 240 chunks.    1.000,
    1.000,
    1.000,
    1.200,
    1.400,
    1.400,
    1.000,
    0.600,
    1.200,
    1.400,
    1.600,
    1.800,
    1.800,
    1.800,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.200,
    1.200,
    1.200,
    1.400,
    1.400,
    1.400,
    1.400,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.600,
    1.600,
    1.200,
    1.200,
    0.200,
    0.200,
    0.200,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.200,
    0.200,
    0.200,
    0.200,
    0.200,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.400,
    0.200,
    0.200,
    0.200,
    0.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    1.000,
    1.000,
    1.000,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.800,
    1.400,
    1.200,
    1.200,
    1.200,
    1.000,
    1.000,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    0.600,
    0.400,
    0.400,
    1.600,
    1.600,
    1.600,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    0.600,
    1.200,
    1.200,
    1.200,
    1.200,
    1.400,
    1.000,
    1.000,
    1.000,
    0.600,
    0.600,
    0.600,
    0.400,
    0.600,
    0.600,
    0.600,
    0.600,
    0.800,
    0.800,
    0.800,
    0.600,
    0.600,
    0.400,
    0.400,
    0.400,
    1.400,
    1.400,
    1.400,
    1.200,
    1.000,
    1.000,
    1.200,
    1.200,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    1.000,
    0.600,
    0.800,
    0.400,
    0.600,
    0.600,
    0.600,
    0.600,
    1.000,
    1.400,
    1.400,
    0.200,
    0.200,
    0.600,
    0.600,
    0.600,
    1.000,
    1.000,
    1.000,
    1.000,
    1.600,
    1.600,
    1.600,
    1.400,
    1.600,
    1.600,
    1.800,
    1.800,
    1.800,
    1.600,
    1.800,
    1.800,
    1.600,
    1.600,
    1.400,
    1.400,
    1.400,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.600,
    1.600,
    1.600,
    1.600,
    1.000,
    1.000,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    1.200,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    0.800,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.600,
    1.000,
    0.600,
# Chunk Size Ratios End
